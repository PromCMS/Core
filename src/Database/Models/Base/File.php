<?php
/**
 * This file is generated by PromCMS, do not edit this file as changes made to this file will be overriden in the next model sync. 
 * Updates should be made to ../File.php as that is not overriden.
 */

namespace PromCMS\Core\Database\Models\Base;

use Doctrine\ORM\Mapping as ORM;
use PromCMS\Core\Database\Models\Mapping as Mapping;
use PromCMS\Core\Database\Models\Abstract\Entity;
use Gedmo\Mapping\Annotation as GedmoMapping;
use Doctrine\Common\Collections\ArrayCollection;

abstract class File extends Entity {
  use \PromCMS\Core\Database\Models\Trait\Timestamps;
  use \PromCMS\Core\Database\Models\Trait\Localized;
  use \PromCMS\Core\Database\Models\Trait\NumericId;  

  #[ORM\Column(
    type: 'string', 
    name: 'filename',
    nullable: false,
  )]
  #[Mapping\PromModelColumn(
    title: 'Filename', 
    type: 'string',
    editable: true,
    hide: false,
    localized: false
  )]
  protected string $filename;

  #[ORM\Column(
    type: 'string', 
    name: 'mimetype',
    nullable: false,
  )]
  #[Mapping\PromModelColumn(
    title: 'Mime type', 
    type: 'string',
    editable: true,
    hide: false,
    localized: false
  )]
  protected string $mimeType;

  #[ORM\Column(
    type: 'text', 
    name: 'filepath',
    nullable: false,
  )]
  #[Mapping\PromModelColumn(
    title: 'Filepath', 
    type: 'longText',
    editable: true,
    hide: false,
    localized: false
  )]
  protected string $filepath;

  #[ORM\Column(
    type: 'boolean', 
    name: 'private',
    nullable: true,
  )]
  #[Mapping\PromModelColumn(
    title: 'Private', 
    type: 'boolean',
    editable: true,
    hide: false,
    localized: false
  )]
  protected ?bool $private = false;

  #[ORM\Column(
    type: 'text', 
    name: 'description',
    nullable: true,
  )]
  #[Mapping\PromModelColumn(
    title: 'Description', 
    type: 'longText',
    editable: true,
    hide: false,
    localized: true
  )]
  #[GedmoMapping\Translatable()]
  protected ?string $description;

  public function __construct() {
    $this->translations = new ArrayCollection();
  }

  public function getFilename() {
    return $this->filename;
  }
  
  public function setFilename(string $filename) {
    return $this->filename = $filename;
  }
  public function getMimeType() {
    return $this->mimeType;
  }
  
  public function setMimeType(string $mimeType) {
    return $this->mimeType = $mimeType;
  }
  public function getFilepath() {
    return $this->filepath;
  }
  
  public function setFilepath(string $filepath) {
    return $this->filepath = $filepath;
  }
  public function getPrivate() {
    return $this->private;
  }
  
  public function setPrivate(bool|null $private) {
    return $this->private = $private;
  }
  public function getDescription() {
    return $this->description;
  }
  
  public function setDescription(string|null $description) {
    return $this->description = $description;
  }
  
  #[ORM\OneToMany(targetEntity: \PromCMS\Core\Database\Models\FileTranslation::class, mappedBy: 'object', cascade: ['persist', 'remove'])]
  private $translations;

  public function addTranslation(\PromCMS\Core\Database\Models\FileTranslation $t)
  {
      if (!$this->translations->contains($t)) {
          $this->translations[] = $t;
          $t->setObject($this);
      }
  }

  public function getId(): int|null {
    return $this->id;
  }
}
