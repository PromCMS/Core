<?php

/**
 * This file is generated by PromCMS, do not edit this file as changes made to this file will be overriden in the next model sync.
 * Updates should be made to ../Setting.php as that is not overriden.
 */

namespace PromCMS\Core\Database\Models\Base;

use Doctrine\ORM\Mapping as ORM;
use PromCMS\Core\Database\Models\Mapping as PROM;
use PromCMS\Core\Database\Models\Abstract\Entity;

#[ORM\MappedSuperclass]
class Setting extends Entity
{
  use \PromCMS\Core\Database\Models\Trait\Timestamps;
  use \PromCMS\Core\Database\Models\Trait\Ownable;
  use \PromCMS\Core\Database\Models\Trait\NumericId;
  
  #[ORM\Column(name: 'name', nullable: false, unique: true, type: 'string'), PROM\PromModelColumn(title: 'Name', type: 'string', editable: false, hide: false, localized: false)]
  protected ?string $name;
  
  #[ORM\Column(name: 'slug', nullable: false, unique: true, type: 'string'), PROM\PromModelColumn(title: 'Slug', type: 'string', editable: false, hide: false, localized: false)]
  protected ?string $slug;
  
  #[ORM\Column(name: 'content', nullable: true, unique: false, type: 'array'), PROM\PromModelColumn(title: 'Content', type: 'json', editable: false, hide: false, localized: false)]
  protected ?array $content;
  
  #[ORM\Column(name: 'description', nullable: true, unique: false, type: 'text'), PROM\PromModelColumn(title: 'Description', type: 'longText', editable: false, hide: false, localized: false)]
  protected ?string $description;
  
  function __construct()
  {
  }
  
  #[ORM\PostLoad]
  function __prom__initCollections()
  {
  }
  
  function getName(): string
  {
    return $this->name;
  }
  
  function setName(string $name): static
  {
    $this->name = $name;
    return $this;
  }
  
  function getSlug(): string
  {
    return $this->slug;
  }
  
  function setSlug(string $slug): static
  {
    $this->slug = $slug;
    return $this;
  }
  
  function getContent(): ?array
  {
    return $this->content;
  }
  
  function setContent(?array $content): static
  {
    $this->content = $content;
    return $this;
  }
  
  function getDescription(): ?string
  {
    return $this->description;
  }
  
  function setDescription(?string $description): static
  {
    $this->description = $description;
    return $this;
  }
}